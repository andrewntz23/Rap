<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <title>jspractice_spans</title>
        <script type="text/javascript">
            
            var colors = ["red", "blue", "green", "purple", "orange", "red", "blue", "green", "purple", "orange", "red", "blue", "green", "purple", "orange"] 
            /*Should develop a better way to cycle through colors. this is sloppy, and could get out of bounds index if there is a lot of groups in any particular song.*/

            window.onload = function(){
                var foo = document.getElementsByTagName("span");
                setColor()
                for(var i = 0; (i != foo.length); i++) { 
                    var num = foo[i].getAttribute('data-num');
                    var text = foo[i].getAttribute('data-rhyme');
                    var layover = "overlay('popup".concat(num,  "')"); 
                    var layunder = "wipeOverlay('popup".concat(num, "')");  
                    foo[i].setAttribute("onmouseover", layover);
                    foo[i].setAttribute("onmouseout", layunder);
                    foo[i].setAttribute("onclick", "highlighter(this)");
                }
            }
            
            function setColor(){
                /*works for members of only one group. But what if member of both?  
                Need to format correctly, and adjust so that the checkboxes will actually have their intended functionality. Need better system for colors. Probably can do some sort of math
                */
                var container = document.createElement("form");  
                container.setAttribute("id", "container");
                container.setAttribute("style", "border-style:solid")
                container.setAttribute("action", "");
                document.body.appendChild(container);
                var spans = document.getElementsByTagName("span")
                var distinct = [];
                for (var d = 0; d != spans.length; d++){
                    if (!contains(distinct, spans[d].getAttribute("title"))){
                        distinct.push(spans[d].getAttribute("title"));
                        var newBox = document.createElement("input");
                        var newLabel = document.createElement("label");
                        var newText = document.createTextNode("Highlight group ".concat(spans[d].getAttribute("title"))); 
                        color = colors[d]
                        newBox.type = "checkbox";
                        newBox.name = "highlight";
                        newBox.value = spans[d].getAttribute("title");
                        newBox.id = spans[d].getAttribute("title");
                        newBox.checked = true;
                        newBox.setAttribute("onclick", "clearAllColor()")
                        newLabel.setAttribute("onclick", "clearAllColor()")
                        newLabel.appendChild(newText);
                        newLabel.id = spans[d].getAttribute("title");
                        newLabel.htmlFor = spans[d].getAttribute("title");
                        container.appendChild(newBox); 
                        container.appendChild(newLabel);
                    }
                }
                var foo = document.getElementsByTagName("span") 
                var bar = document.getElementsByTagName("label");
                for (var a = 0; (a != distinct.length); a++){
                    color = colors[a];
                    for (var i = 0; (i != foo.length); i++) { 
                        if (foo[i].getAttribute("title") == distinct[a]){
                            foo[i].setAttribute("style", "color:".concat(color));
                        }
                    }   
                    for (var g = 0; (g != bar.length); g++){  
                        if (bar[g].getAttribute("for") == distinct[a]){ 
                            bar[g].setAttribute("style", "color:".concat(color));
                        }
                    }
                 }
             }
             
             function contains(a, obj) {
                    for (var i = 0; i != a.length; i++) {
                        if (a[i] === obj) {
                            return true;
                        }
                    }
                return false;
            }
            
            function highlighter(elmt){ //will want to also take as a parameter the radio that is selected. or at least grab it. probably grab it. 
                var foo = document.getElementsByTagName("span");
                for(var i = 0; (i != foo.length); i++) { 
                    if (foo[i].getAttribute("title") == elmt.getAttribute("title")){ 
                        if (foo[i].getAttribute("style").indexOf("font-size:200%") != -1){ 
                            foo[i].setAttribute("style", foo[i].getAttribute("style").replace(/;font-size:200%/, "")); //if you try to add a different style thing besides font-size:200% doensnt' work. why?
                                                                                                                       //might be easier to use css hover. 
                        }
                        else{
                            foo[i].setAttribute("style", foo[i].getAttribute("style").concat(";font-size:200%"));
                        }
                    }
                }
            
            }
            function overlay(id) { //popup from obdurodon example. Will I need this? 
                 if (document.getElementById(id)) return; // don't create a popup if there's already one open for this id
                 var overlay = document.createElement("div");
                 var XMousePos = window.event.clientX;
                 var Ypos = window.event.clientY;
                 var windowWidth = window.innerWidth;
                 if (windowWidth - XMousePos > 300) {
                     var Xpos = XMousePos
                 } else {
                       var Xpos = windowWidth - 310
                    };
                    overlay.setAttribute("id", id);
                    overlay.setAttribute("style", "z-index: 10; background-color: yellow; position: absolute; left: " + Xpos + "px; top: " + Ypos + "px; border: 2px solid black; width: 300px; padding: 2px; margin: 0;")
                    overlay.setAttribute("onclick", "document.body.removeChild(document.getElementById('" + id + "'))");
                    overlay.setAttribute("class", "overlay");
                    document.body.appendChild(overlay);
            }
            
            function wipeOverlay(id){
                 var elmt = document.getElementById(id);
                 elmt.remove();
            }
            /*Have basic functionality working here; What I need to do is say that on clicking ANY checkbox, it re-evaluates for every checkbox; same for radio*/
    /*        function clearColor(elmt){  //cannot overload methods in JavaScript, but CAN have optional parameters. Best move might be to set a second param here evaluate whether it is null or not, use the SINGLE one
            //for the checkboxes and DOBUBLE for the radio, then check if second arg is null (if so, run what currently have; if not, change it to set color based on radio value and this value.)
                var radio = document.querySelector('input[name="device"]:checked').value; //working, sort of (needs a lot of building still), but the below code is not working because radio!=null. good start. 
                var bar = document.getElementsByTagName("span");
                //I think that I actually need to collect all of the boxes that are checked, and then run a loop over those, with what is belowe as nested for them, because should be able to do this with radios too.
                if (elmt.checked == false){
                    for (var i = 0; (i != bar.length); i++) { 
                        if (bar[i].getAttribute("title") == elmt.getAttribute("id")){
                            bar[i].setAttribute("style", "color:black");
                        }
                    }
                }
                else {
                    for (var i = 0; (i != bar.length); i++) { 
                        if (bar[i].getAttribute("title") == elmt.getAttribute("id") &amp;&amp; bar[i].hasAttribute('data-'.concat(radio)) ){
                            bar[i].setAttribute("style", "color:".concat(colors[(elmt.getAttribute("id").charCodeAt(0) - 97)])); //will fail if groups ever exceed letters of alphabet, but that shouldn't happen
                        }
                    }
                }
               
            }*/
            
            //nearly there with this working, just need to add in so that radios will work properly. 
            function clearAllColor(){  //not based on taking any parameters anymore; why isn't it working for both radio
                var radio = document.querySelector('input[name="device"]:checked').value; //working, sort of (needs a lot of building still), but the below code is not working because radio!=null. good start. 
                var boxes = document.querySelectorAll("input[type='checkbox']");
                var bar = document.getElementsByTagName("span");
                for (var b = 0; (b != boxes.length); b++){
                    var elmt = boxes[b];
                    if (elmt.checked == false){
                        for (var i = 0; (i != bar.length); i++) { 
                            if (bar[i].getAttribute("title") == elmt.getAttribute("id")){
                                bar[i].setAttribute("style", "color:black");
                            }
                        }
                    }
                    else {
                        for (var i = 0; (i != bar.length); i++) { 
                            if (bar[i].getAttribute("title") == elmt.getAttribute("id") &amp;&amp; bar[i].hasAttribute('data-'.concat(radio)) ){
                                bar[i].setAttribute("style", "color:".concat(colors[(elmt.getAttribute("id").charCodeAt(0) - 97)])); //will fail if groups ever exceed letters of alphabet, but that shouldn't happen
                            }
                            else if (bar[i].getAttribute("title") == elmt.getAttribute("id") &amp;&amp; !bar[i].hasAttribute('data-'.concat(radio)) ){
                                bar[i].setAttribute("style", "color:black");
                            }
                        }
                    }
               }
            }

            

        </script>
    </head>
    <body>
        <p>The <span title="a" data-all="0" data-num="1" data-rhyme="25" data-assonance="34">fat</span>
            <span title="a" data-all="0" data-num="2" data-rhyme="15" data-assonance="34">cat</span>
            <span title="a" data-all="0" data-num="3" data-rhyme="4" data-assonance="125">snags</span> his <span title="a" 
                data-num="4" data-all="0" data-rhyme="3" data-assonance="125">bags</span> and <span data-all="0" title="a" data-num="5"
                    data-assonance="34">gat</span> <span title="b" data-all="0">cool</span> <span title="c" data-all="0"> and cooler</span></p>
<!--   Might be better to do this with either XSLT or JS     -->
        <form action=""> 
            <input type="radio" name="device" value="all" id="all" checked="checked" onclick="clearAllColor()"/>
            <label for="all" onclick="clearAllColor()">all</label>
            <input type="radio" name="device" value="rhyme" id="rhyme" onclick="clearAllColor()"/>
            <label for="rhyme" onclick="clearAllColor()">rhyme</label>
            <input type="radio" name="device" value="slant" id="slant" onclick="clearAllColor()"/>
            <label for="slant" onclick="clearAllColor()">slant rhyme</label>
            <input type="radio" name="device" value="assonance" id="assonance" onclick="clearAllColor()"/>
            <label for="assonance" onclick="clearAllColor()">assonance</label>
            <input type="radio" name="device" value="alliteration" id="alliteration" onclick="clearAllColor()"/>
            <label for="alliteration" onclick="clearAllColor()">alliteration</label>
            <input type="radio" name="device" value="assimilation" id="assimilation" onclick="clearAllColor()"/>
            <label for="assimilation" onclick="clearAllColor()">assimilation</label>
        </form>
    </body>
</html>
